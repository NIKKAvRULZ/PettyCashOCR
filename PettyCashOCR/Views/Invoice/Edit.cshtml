@model PettyCashOCR.Models.PettyCashVoucher

<h2>Edit Petty Cash Voucher</h2>

<!-- Display Voucher Info -->
<div>
    <h3>🧾 Extracted Petty Cash Voucher Data:</h3>
    <table class="voucher-table">
        <thead>
            <tr>
                <th>Paid To</th>
                <th>Date</th>
                <th>Voucher No</th>
                <th>Email</th>
                <th>Contact No</th>
                <th>Total Amount</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.PaidTo</td>
                <td>@Model.Date</td>
                <td>@Model.VoucherNo</td>
                <td>@Model.Email</td>
                <td>@Model.ContactNo</td>
                <td>@Model.TotalAmount.ToString("N2")</td>
            </tr>
        </tbody>
    </table>
</div>

<!-- Display Line Items -->
<h3>📋 Line Items:</h3>
<table class="line-items-table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Description</th>
            <th>Amount</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.LineItems != null){
            @foreach (var item in Model.LineItems){
                Console.WriteLine($"Line Item: {item.ItemDate}, {item.Description}, {item.Amount}");
                <tr>
                    <td>@item.ItemDate</td>
                    <td>@item.Description</td>
                    <td>@item.Amount.ToString("N2")</td>
                </tr>
            }
        }
    </tbody>
</table>

<!-- Editable Fields (Optional) -->
<h3>Edit Voucher Data:</h3>
<form asp-action="Save" asp-controller="Invoice" method="post">
    <div>
        <label for="PaidTo">Paid To</label>
        <input type="text" id="PaidTo" name="PaidTo" value="@Model.PaidTo" required />
    </div>

    <div>
        <label for="Date">Date</label>
        <input type="text" id="Date" name="Date" value="@Model.Date" required />
    </div>

    <div>
        <label for="VoucherNo">Voucher No</label>
        <input type="text" id="VoucherNo" name="VoucherNo" value="@Model.VoucherNo" required />
    </div>
    <div>
        <label for="Email">Email</label>
        <input type="text" id="Email" name="Email" value="@Model.Email" required />
    </div>
    <div>
        <label for="ContactNo">Contact No</label>
        <input type="text" id="ContactNo" name="ContactNo" value="@Model.ContactNo" required />
    </div>
    <div>
        <label for="ToatalAmount">Toatal Amount</label>
        
        <input type="number" id="ToatalAmount" name="ToatalAmount" value="@Model.TotalAmount" step="0.01" required />
    </div>
    <div>
        <h3>Line Items</h3>
        <table id="line-items-table">
            <thead>
                <tr>
                    <th>Item Date</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.LineItems != null && Model.LineItems.Any())
                {
                    @for (int i = 0; i < Model.LineItems.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="hidden" name="LineItems[@i].Id" value="@Model.LineItems[i].Id" />
                                <input type="text" name="LineItems[@i].ItemDate" value="@Model.LineItems[i].ItemDate" />
                            </td>
                            <td>
                                <input type="text" name="LineItems[@i].Description" value="@Model.LineItems[i].Description" />
                            </td>
                            <td>
                                <input type="number" name="LineItems[@i].Amount" value="@Model.LineItems[i].Amount" step="0.01" />
                            </td>
                            <td>
                                <button type="button" onclick="removeLineItem(this)">Remove</button>
                            </td>
                        </tr>
                    }

                }
                else
                {
                    <tr>
                        <td colspan="4">No line items found.</td>
                    </tr>
                }
            </tbody>
        </table>
        <button type="button" onclick="addLineItem()">Add Line Item</button>
    </div>

    <button id="saveVoucherBtn" class="btn btn-primary">Save Voucher</button>
</form>

<!-- Styles -->
<style>
    .voucher-table, .line-items-table {
        width: 100%;
        border-collapse: collapse;
    }

        .voucher-table th, .voucher-table td, .line-items-table th, .line-items-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .voucher-table th, .line-items-table th {
            background-color: #f2f2f2;
        }

        .voucher-table td, .line-items-table td {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }

        .voucher-table td {
            max-width: 150px;
        }

        .line-items-table td {
            max-width: 300px;
        }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
        $('#saveVoucherBtn').click(function (e) {
        e.preventDefault();

        const formData = $('form').serialize(); // Serialize form data

        $.ajax({
            url: '/Invoice/Save',
            method: 'POST',
            data: formData,
            success: function () {
                alert('Voucher saved successfully!');
                window.location.href = '/Invoice/List';
            },
            error: function (xhr) {
                alert('Error saving voucher: ' + xhr.responseText);
                console.error(xhr);
            }
        });
    });


    // Log the entire model data to see if LineItems are available
    console.log('PettyCashVoucher model:', @Html.Raw(Json.Serialize(Model)));

    // Check if the line items are being passed to the view
    if (Model.LineItems && Model.LineItems.length > 0) {
        console.log('Line items found:', Model.LineItems);
    } else {
        console.log('No line items found.');
    }

           let lineItemIndex = @Model.LineItems?.Count ?? 0;

    function addLineItem() {
        const table = document.getElementById("line-items-table").getElementsByTagName('tbody')[0];

        const row = table.insertRow();
        row.innerHTML = `
            <td><input type="date" name="LineItems[${lineItemIndex}].ItemDate" /></td>
            <td><input type="text" name="LineItems[${lineItemIndex}].Description" /></td>
            <td><input type="number" name="LineItems[${lineItemIndex}].Amount" step="0.01" /></td>
            <td><button type="button" onclick="removeLineItem(this)">Remove</button></td>
        `;

        lineItemIndex++; // Increment index for the next added row
    }




    function removeLineItem(button) {
        button.closest("tr").remove();
    }
</script>
